#!/bin/bash

# Disable debugger by default if $FLASK_ENV not explicitly set to "development"
# https://flask.palletsprojects.com/en/1.1.x/config/#environment-and-debug-features
if [[ "$FLASK_ENV" != "development" ]]; then
    FLASK_DEBUG="${FLASK_DEBUG:-0}"
fi

# But enable development mode by default
FLASK_ENV="${FLASK_ENV:-development}"

# If `flask run`
if [[ "$1" == "run" ]]; then

    # Default options
    host="--host=0.0.0.0"
    port="--port=8080"
    reload="--reload"

    # Override default options
    options=""
    shift
    while test ${#} -gt 0
    do
        if [[ "$1" =~ ^--host= || "$1" =~ ^-h[^\s]+ ]]; then
            host="$1"
        elif [[ "$1" == "-h" || "$1" == "--host" ]]; then
            host="$1 $2"
            shift
        elif [[ "$1" =~ ^--port= || "$1" =~ ^-p[^\s]+ ]]; then
            port="$1"
        elif [[ "$1" == "-p" || "$1" == "--port"  ]]; then
            port="$1 $2"
            shift
        elif [[ "$1" =~ ^--(no-)?reload$ ]]; then
            reload="$1"
        elif [[ "$1" =~ ^--with(out)?-threads$ ]]; then
            threads="$1"
        else
            options+=" $1"
        fi
        shift
    done

    # Kill any process listing on the specified port
    # using regex to handle -pxxxx, -p xxxx, --port xxxx, --port=xxxx
    fuser --kill -INT "${port//[^0-9]}/tcp" &> /dev/null

    # Check whether online (or offline)
	if [ "$CS50_IDE_TYPE" == "online" ]; then
		URL="https://$C9_HOSTNAME"
	else
		URL="http://localhost"
	fi

    # If $FLASK_APP isn't set, check for application.py (for backwards compatibility), else default to app.py
    if [[ -z "$FLASK_APP" ]]; then
        if [[ -f "application.py" ]]; then
            FLASK_APP="application.py"
        else
            FLASK_APP="app.py"
        fi
    fi

    # Spawn flask
    unbuffer /usr/local/bin/flask run $host $port $reload $threads $options | sed "s#\(.*\)http://[^:]\+\(:.\+\)#\1$URL\2#"
else
    /usr/local/bin/flask "$@"
fi
